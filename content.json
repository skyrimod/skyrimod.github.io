{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"时间复杂度解题思路","slug":"算法时间复杂度","date":"2022-07-23T10:22:07.000Z","updated":"2022-07-23T10:28:35.451Z","comments":true,"path":"2022/07/23/算法时间复杂度/","link":"","permalink":"http://example.com/2022/07/23/%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/","excerpt":"","text":"时间复杂度解题思路如何计算时间复杂度 找出问题规模n 找出基本语句 列出基本语句执行次数t与问题规模n的方程 解出t&#x3D;f(n)，则f(n)即为时间复杂度 例子1、2011年计算机联考真题1234x=2;while(x&lt;n/2)&#123; x=2*x;&#125; 解题步骤： 问题规模n就是while(x&lt;n&#x2F;2)中的n 基本语句是x&#x3D;2*x; 执行多少次x&#x3D;2*x，使得x&#x3D;n&#x2F;2，即x&#x3D;n。假设执行t次，即x乘了t个2后等于n，所以2^t&#x3D;n。 解得t&#x3D;(log2n，时间复杂度为O((log2n) 2、2012年计算机联考真题1234int func(int n)&#123; if(n&lt;=1) return 1; return n*fact(n-1);&#125; 解题步骤： 这是一个递归，问题规模是入参n 基本语句是return n*fact(n-1)。换一个思路，n-1执行的次数与递归执行的次数一样，因此将n-1看做基本语句 递归的结束是n&lt;&#x3D;1，因此执行多少次n-1后n&lt;&#x3D;1，显而易见，n减n次1后满足n&lt;&#x3D;1的条件 O(n)即为时间复杂度 3、2014年计算机联考真题123456count=0;for(k=1;k&lt;=n;k*=2)&#123; for(j=1;j&lt;=n;j++)&#123; count++; &#125;&#125; 解题步骤：问题规模有两个，先看内层： 问题规模n就是j&lt;&#x3D;n中的n 基本语句看似是count++，实则应该是j++，这样方便找对应的方程 j初始是1，执行多少次j++后j&lt;&#x3D;n？显然执行n-1次后满足条件，即t&#x3D;n-1 因此时间复杂度为O(n) 再看外层： 问题规模n就是k&lt;&#x3D;n中的n 同内层的j++，这里将k*&#x3D;2看做基本语句 假设k乘t次2，可以使k&lt;&#x3D;n。即2^t&#x3D;n 解3中的方程，可得时间复杂度是O(log2n)。 结合内外层：因为是嵌套for循环，是一个排列组合问题，应该将内外层时间复杂度相乘。故时间复杂度为O(nlog2n) 4、2017年计算机联考真题123456int func(int n) &#123; int i=0, sum=0; while(sum &lt; n) sum += ++i; return i;&#125; 解题步骤： 问题规模n就是while(sum &lt; n)中的n sum +&#x3D; ++i 可以分解为 i+1; sum &#x3D; sum + i; 基本语句为sum &#x3D; sum + i; 问：执行多少次 sum &#x3D; sum + i，可以使 sum &#x3D; n ？ 执行次数t sum 1 sum &#x3D; 0 + 1 &#x3D; 1 2 sum &#x3D; 0 + 1 + 2 &#x3D; 3 3 sum &#x3D; 0 + 1 + 2 + 3 &#x3D; 6 4 sum &#x3D; 0 + 1 + 2 + 3 + 4 &#x3D; 10 可见，执行次数t与sum可构成一个代数式， 10 &#x3D; (1 + 4) * 4 &#x2F; 2 即：sum &#x3D; (1 + t) * t &#x2F; 2 根据步骤3可得出方程t^2 &#x3D; sum &#x3D; n，解得 t &#x3D; n1&#x2F;2，则该函数的时间复杂度为O(n1&#x2F;2) 难点难点在找出第三步的方程式注：一个问题要搞清楚出现的所有概念以及概念之间的关系，这样这个问题按照逻辑就很容易解答。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-07-17T10:59:36.190Z","updated":"2022-07-17T10:59:36.190Z","comments":true,"path":"2022/07/17/hello-world/","link":"","permalink":"http://example.com/2022/07/17/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}